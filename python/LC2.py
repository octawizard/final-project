from pyplasm import *

#sofa_color = [205.0/255, 102.0/255, 0]
sofa_color = [143.0/255, 188.0/255, 143.0/255]
pipes_color = [139.0/255, 37.0/255, 0]

numberOfSeats = 3
seat_dx = 4.66	#+ e - 2.33 se centrato nell'origine

def DOMAIN2D(domains1D):
	def aux(q):
		a = q[0]
		b = q[1]
		c = q[2]
		d = q[3]
		return [ [ a, b, d ], [ d, b, c ] ]
	dd = PROD([ domains1D[0], domains1D[1] ])
	complex = UKPOL(dd)
	points = complex[0]
	cells = CAT(AA(aux)(complex[1]))
	return MKPOL([ points, cells, None ])

domainPI = DOMAIN([[0,1],[0,2*PI]])([10,32])
domain1D = INTERVALS(1)(20)
domain2D = DOMAIN2D([ INTERVALS(1)(20), INTERVALS(1)(20) ])
domain3D = PROD([DOMAIN([[0,1],[0,1]])([100,5]), INTERVALS(1)(1)])

def torus (R, r) :
	def toruS1 (v) :
		a = v[0]
		b = v[1] 
		u = (r * COS(a)+2*R) * (COS(b))
		v = (r * COS(a)+2*R) * (SIN(b))
		w = (r * SIN(a))
		return [u,v,w]
	return toruS1

def isin( u, a, b ):
	return (u >= a and u < b)

def curves_union( curves ):
	def aux0( domains ):
		def aux1(u):
			n = len(curves)
			i = 0
			j = 0
			k = 0
			while ( i < n ):
				k += domains[i][1] - domains[i][0]
				i += 1
			i = 0
			while ( i < n and not(isin(u[0] * k, j, j + domains[i][1] - domains[i][0])) ):
				j += domains[i][1] - domains[i][0]
				i += 1
			if i < n :
				return curves[i]([ domains[i][0] + u[0] * k - j ])
			else:
				return curves[n-1]([ domains[n-1][1] ])
		return aux1
	return aux0


#braccioli divano/poltrona
arm_dz = 5.43
arm_dx = 1.47
arm_dy = 6.62

#totale
dx = 7.6
dz = 6.6
dy = 7.0

def getArms(dx, n):
	arms = STRUCT([getArmSkeleton(dx*n), getArmPillows(dx*n)])
	return arms

#frontal feet
def getArmSkeleton(dx) :
	domain = DOMAIN2D([ INTERVALS(2 * PI)(32), INTERVALS(2 * PI)(32) ])
	b11 = BEZIER(S1)([[dx + 0.38, 0, 0], [dx + 0.38, 0, 5.33]])
	b21 = BEZIER(S1)([[dx + 0.38 + 0.22, 0, 0], [dx + 0.38 + 0.22, 0, 5.33]])
	sur1 = CUBICHERMITE(S2)([b11,b21,[0,-0.44,0],[0,0.44,0]])
	sur2 = CUBICHERMITE(S2)([b11,b21,[0,0.44,0],[0,-0.44,0]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = MAP(sur2)(domain2D)
	mapping = torus(0.22/4,0.22/8)
	base = T([1])([dx + 0.38 + 0.11])(MAP(mapping)(domain))
	f1 = STRUCT([sur1, sur2, base])

	b11 = BEZIER(S1)([[-dx - 0.38, 0, 0], [-dx - 0.38, 0, 5.33]])
	b21 = BEZIER(S1)([[-dx - 0.38 - 0.22, 0, 0], [-dx - 0.38 - 0.22, 0, 5.33]])
	sur1 = CUBICHERMITE(S2)([b11,b21,[0,-0.44,0],[0,0.44,0]])
	sur2 = CUBICHERMITE(S2)([b11,b21,[0,0.44,0],[0,-0.44,0]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = MAP(sur2)(domain2D)
	mapping = torus(0.22/4,0.22/8)
	base = T([1])([-dx - 0.38 - 0.11])(MAP(mapping)(domain))
	f2 = STRUCT([sur1, sur2, base])

	#continuo tubi
	c1 = CUBICHERMITE(S1)([[dx + 0.38, 0, 5.33],[dx + 0.38 +0.22+0.1, 0, 5.33+0.34],[0,0,0.75],[0.75,0,0]])
	c2 = CUBICHERMITE(S1)([[dx + 0.38 +0.22, 0, 5.33],[dx + 0.38 +0.22+0.1, 0, 5.33 +0.12],[0,0,0.25],[0.25,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0.44,0],[0,-0.44,0]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,-0.44,0],[0,0.44,0]])
	sur2 = MAP(sur2)(domain2D)
	f1x = STRUCT([sur1, sur2])

	c1 = CUBICHERMITE(S1)([[-dx - 0.38, 0, 5.33],[-dx - 0.38 -0.22-0.1, 0, 5.33+0.34],[0,0,0.75],[-0.75,0,0]])
	c2 = CUBICHERMITE(S1)([[-dx - 0.38 -0.22, 0, 5.33],[-dx - 0.38 -0.22-0.1, 0, 5.33 +0.12],[0,0,0.25],[-0.25,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0.44,0],[0,-0.44,0]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,-0.44,0],[0,0.44,0]])
	sur2 = MAP(sur2)(domain2D)
	f2x = STRUCT([sur1, sur2])

	#continuo2
	b11 = BEZIER(S1)([[dx + 0.38 +0.22+0.1, 0, 5.33+0.34], [dx + 0.38 +0.22+0.1 + 0.7, 0, 5.33+0.34]])
	b21 = BEZIER(S1)([[dx + 0.38 +0.22+0.1, 0, 5.33+0.12], [dx + 0.38 +0.22+0.1 + 0.7, 0, 5.33+0.12]])
	sur1 = CUBICHERMITE(S2)([b11,b21,[0,-0.44,0],[0,0.44,0]])
	sur2 = CUBICHERMITE(S2)([b11,b21,[0,0.44,0],[0,-0.44,0]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = MAP(sur2)(domain2D)
	fy1 = STRUCT([sur1, sur2])

	b11 = BEZIER(S1)([[-dx - 0.38 -0.22-0.1, 0, 5.33+0.34], [-dx - 0.38 -0.22-0.1 - 0.7, 0, 5.33+0.34]])
	b21 = BEZIER(S1)([[-dx - 0.38 -0.22-0.1, 0, 5.33 +0.12], [-dx - 0.38 -0.22-0.1 - 0.7, 0, 5.33 +0.12]])
	sur1 = CUBICHERMITE(S2)([b11,b21,[0,-0.44,0],[0,0.44,0]])
	sur2 = CUBICHERMITE(S2)([b11,b21,[0,0.44,0],[0,-0.44,0]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = MAP(sur2)(domain2D)
	fy2 = STRUCT([sur1, sur2])

	#continuo3
	c1 = CUBICHERMITE(S1)([[dx + 0.38 +0.22+0.1 + 0.7, -0.11, 5.33+0.23],[dx + 0.38 +0.22+0.1 + 0.7 +0.34, 0.22, 5.33+0.23],[0.75,0,0],[0,0.75,0]])
	c2 = CUBICHERMITE(S1)([[dx + 0.38 +0.22+0.1 + 0.7, 0.11, 5.33 +0.23],[dx + 0.38 +0.22+0.1 + 0.7 +0.12, 0.22, 5.33 +0.23],[0.25,0,0],[0,0.25,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.44],[0,0,-0.44]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.44],[0,0,0.44]])
	sur2 = MAP(sur2)(domain2D)
	f1z = STRUCT([sur1, sur2])

	c1 = CUBICHERMITE(S1)([[-dx - 0.38 -0.22-0.1 - 0.7, -0.11, 5.33+0.23],[-dx - 0.38 -0.22-0.1 - 0.7 -0.34, 0.22, 5.33+0.23],[-0.75,0,0],[0,0.75,0]])
	c2 = CUBICHERMITE(S1)([[-dx - 0.38 -0.22-0.1 - 0.7, 0.11, 5.33 +0.23],[-dx - 0.38 -0.22-0.1 - 0.7 -0.12, 0.22, 5.33 +0.23],[-0.25,0,0],[0,0.25,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.44],[0,0,-0.44]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.44],[0,0,0.44]])
	sur2 = MAP(sur2)(domain2D)
	f2z = STRUCT([sur1, sur2])
	
	#continuo4
	c1 = CUBICHERMITE(S1)([[dx + 0.38 +0.22+0.1 + 0.7 +0.34, 0.22, 5.33+0.23], [dx + 0.38 +0.22+0.1 + 0.7 +0.34, 0.22+6.62, 5.33+0.23], [0,0,0],[0,0,0]])
	#VIEW(MAP(c1)(domain1D))
	c2 = CUBICHERMITE(S1)([[dx + 0.38 +0.22+0.1 + 0.7 +0.12, 0.22, 5.33 +0.23], [dx + 0.38 +0.22+0.1 + 0.7 +0.12, 0.22+6.62, 5.33 +0.23], [0,0,0],[0,0,0]])
	#VIEW(MAP(c2)(domain1D))
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.44],[0,0,-0.44]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.44],[0,0,0.44]])
	sur2 = MAP(sur2)(domain2D)
	f11y = STRUCT([sur1, sur2])

	c1 = CUBICHERMITE(S1)([[-dx - 0.38 -0.22-0.1 - 0.7 -0.34, 0.22, 5.33 +0.23], [-dx - 0.38 -0.22-0.1 - 0.7 -0.34, 0.22+6.62, 5.33+0.23], [0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[-dx - 0.38 -0.22-0.1 - 0.7 -0.12, 0.22, 5.33 +0.23], [-dx - 0.38 -0.22-0.1 - 0.7 -0.12, 0.22+6.62, 5.33 +0.23], [0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.44],[0,0,-0.44]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.44],[0,0,0.44]])
	sur2 = MAP(sur2)(domain2D)
	f22y = STRUCT([sur1, sur2])

	#continuo5
	c1 = CUBICHERMITE(S1)([[dx + 0.38 +0.22+0.1 + 0.7 +0.34, 0.22+6.62, 5.33+0.23], [dx + 0.38 +0.22+0.1 + 0.7 +0.12 -0.1, 0.22+6.62+0.34, 5.33+0.23], [0,0.75,0],[-0.75,0,0]])
	c2 = CUBICHERMITE(S1)([[dx + 0.38 +0.22+0.1 + 0.7 +0.12, 0.22+6.62, 5.33+0.23], [dx + 0.38 +0.22+0.1 + 0.7 +0.12 -0.1, 0.22+6.62+0.12, 5.33 +0.23], [0,0.25,0],[-0.25,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.44],[0,0,-0.44]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.44],[0,0,0.44]])
	sur2 = MAP(sur2)(domain2D)
	f3 = STRUCT([sur1, sur2])

	c1 = CUBICHERMITE(S1)([[-dx - 0.38 -0.22-0.1 - 0.7 -0.34, 0.22+6.62, 5.33+0.23], [-dx - 0.38 -0.22-0.1 - 0.7 -0.12 +0.1, 0.22+6.62+0.34, 5.33+0.23], [0,0.75,0],[0.75,0,0]])
	c2 = CUBICHERMITE(S1)([[-dx - 0.38 -0.22-0.1 - 0.7 -0.12, 0.22+6.62, 5.33+0.23], [-dx - 0.38 -0.22-0.1 - 0.7 -0.12 +0.1, 0.22+6.62+0.12, 5.33 +0.23], [0,0.25,0],[0.25,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.44],[0,0,-0.44]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.44],[0,0,0.44]])
	sur2 = MAP(sur2)(domain2D)
	f4 = STRUCT([sur1, sur2])

	#continuo6
	c1 = CUBICHERMITE(S1)([[dx + 0.38 +0.22+0.1 + 0.7 +0.12 -0.1, 0.22+6.62+0.34, 5.33+0.23], [dx + 0.38 +0.22+0.1 + 0.7 +0.12 -0.1 -1.47, 0.22+6.62+0.34, 5.33+0.23], [0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[dx + 0.38 +0.22+0.1 + 0.7 +0.12 -0.1, 0.22+6.62+0.12, 5.33+0.23], [dx + 0.38 +0.22+0.1 + 0.7 +0.12 -0.1 -1.47, 0.22+6.62+0.12, 5.33+0.23], [0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.44],[0,0,-0.44]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.44],[0,0,0.44]])
	sur2 = MAP(sur2)(domain2D)
	f5 = STRUCT([sur1, sur2])

	c1 = CUBICHERMITE(S1)([[-dx - 0.38 -0.22-0.1 - 0.7 -0.12 +0.1, 0.22+6.62+0.34, 5.33+0.23],[-dx - 0.38 -0.22-0.1 - 0.7 -0.12 +0.1+1.47, 0.22+6.62+0.34, 5.33+0.23], [0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[-dx - 0.38 -0.22-0.1 - 0.7 -0.12 +0.1, 0.22+6.62+0.12, 5.33+0.23],[-dx - 0.38 -0.22-0.1 - 0.7 -0.12 +0.1+1.47, 0.22+6.62+0.12, 5.33 +0.23],[0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.44],[0,0,-0.44]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.44],[0,0,0.44]])
	sur2 = MAP(sur2)(domain2D)
	f6 = STRUCT([sur1, sur2])

	#DIS-continuo7
	c1 = CUBICHERMITE(S1)([[dx + 0.38 +0.22+0.1 + 0.8 +0.12 -0.1 -1.47, 0.22+6.62+0.23, 5.33+0.23],
		[dx + 0.38 +0.22+0.1 + 0.8 +0.12 -0.1 -1.47, 0.22+6.62+0.23, 0], 
		[0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[dx + 0.38 +0.22+0.1 + 0.8 +0.12 -0.1 -1.47 -0.22, 0.22+6.62+0.23, 5.33+0.23], 
		[dx + 0.38 +0.22+0.1 + 0.8 +0.12 -0.1 -1.47 -0.22, 0.22+6.62+0.23, 0],
		[0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0.44,0],[0,-0.44,0]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,-0.44,0],[0,0.44,0]])
	sur2 = MAP(sur2)(domain2D)
	mapping = torus(0.22/4,0.22/8)
	base = T([1,2])([dx + 0.38 +0.22+0.1 + 0.8 +0.12 -0.1-1.47-0.22+ 0.11, 0.22+6.62+0.23])(MAP(mapping)(domain))
	f7 = STRUCT([sur1, sur2, base])

	c1 = CUBICHERMITE(S1)([[-dx - 0.38 -0.22-0.1 - 0.8 -0.12 +0.1+1.47, 0.22+6.62+0.23, 5.33+0.23],
		[-dx - 0.38 -0.22-0.1 - 0.8 -0.12 +0.1+1.47, 0.22+6.62+0.23, 0],
		[0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[-dx - 0.38 -0.22-0.1 - 0.8 -0.12 +0.1+1.47 +0.22, 0.22+6.62+0.23, 5.33 +0.23],
		[-dx - 0.38 -0.22-0.1 - 0.8 -0.12 +0.1+1.47+0.22, 0.22+6.62+0.23, 0],
		[0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0.44,0],[0,-0.44,0]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,-0.44,0],[0,0.44,0]])
	sur2 = MAP(sur2)(domain2D)
	mapping = torus(0.22/4,0.22/8)
	base = T([1,2])([-dx - 0.38 -0.22-0.1 - 0.8 -0.12 +0.1+1.47+0.22- 0.11, 0.22+6.62+0.23])(MAP(mapping)(domain))
	f8 = STRUCT([sur1, sur2, base])

	#intermedio laterale 1 dz=2.14=1.02+0.9+0.22
	c1 = CUBICHERMITE(S1)([[dx + 0.38 +0.11, -0.055, 2.14 +0.055], [dx + 0.38 +0.11+0.9, -0.055, 2.14 +0.055], [0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[dx + 0.38 +0.11, +0.055, 2.14 +0.055], [dx + 0.38 +0.11+0.9, +0.055, 2.14 +0.055], [0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.22],[0,0,-0.22]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.22],[0,0,0.22]])
	sur2 = MAP(sur2)(domain2D)
	f9 = STRUCT([sur1, sur2])

	c1 = CUBICHERMITE(S1)([[-dx - 0.38 -0.11, -0.055, 2.14 +0.055], [-dx - 0.38 -0.11-0.9, -0.055, 2.14 +0.055], [0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[-dx - 0.38 -0.11, +0.055, 2.14 +0.055], [-dx - 0.38 -0.11-0.9, +0.055, 2.14 +0.055], [0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.22],[0,0,-0.22]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.22],[0,0,0.22]])
	sur2 = MAP(sur2)(domain2D)
	f10 = STRUCT([sur1, sur2])

	#intermedio laterale 2
	c1 = CUBICHERMITE(S1)([[dx + 0.38 +0.11+0.9, -0.055, 2.14 +0.055], [dx + 0.38 +0.11+0.9+0.22, +0.155, 2.14 +0.055], [0.5,0,0],[0,0.5,0]])
	c2 = CUBICHERMITE(S1)([[dx + 0.38 +0.11+0.9, +0.055, 2.14 +0.055], [dx + 0.38 +0.11+0.9+0.11, +0.155, 2.14 +0.055], [0.25,0,0],[0,0.25,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.22],[0,0,-0.22]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.22],[0,0,0.22]])
	sur2 = MAP(sur2)(domain2D)
	f11 = STRUCT([sur1, sur2])

	c1 = CUBICHERMITE(S1)([[-dx - 0.38 -0.11-0.9, -0.055, 2.14 +0.055], [-dx - 0.38 -0.11-0.9-0.22, +0.155, 2.14 +0.055], [-0.5,0,0],[0,0.5,0]])
	c2 = CUBICHERMITE(S1)([[-dx - 0.38 -0.11-0.9, +0.055, 2.14 +0.055], [-dx - 0.38 -0.11-0.9-0.11, +0.155, 2.14 +0.055], [-0.25,0,0],[0,0.25,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.22],[0,0,-0.22]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.22],[0,0,0.22]])
	sur2 = MAP(sur2)(domain2D)
	f12 = STRUCT([sur1, sur2])

	#intermedio laterale 3
	c1 = CUBICHERMITE(S1)([[dx + 0.38 +0.11+0.9+0.22, +0.155, 2.14 +0.055], [dx + 0.38 +0.11+0.9+0.22, +0.155+6.72, 2.14 +0.055], [0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[dx + 0.38 +0.11+0.9+0.11, +0.155, 2.14 +0.055], [dx + 0.38 +0.11+0.9+0.11, +0.155+6.72, 2.14 +0.055], [0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.22],[0,0,-0.22]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.22],[0,0,0.22]])
	sur2 = MAP(sur2)(domain2D)
	f13 = STRUCT([sur1, sur2])

	c1 = CUBICHERMITE(S1)([[-dx - 0.38 -0.11-0.9-0.22, +0.155, 2.14 +0.055], [-dx - 0.38 -0.11-0.9-0.22, +0.155+6.72, 2.14 +0.055], [0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[-dx - 0.38 -0.11-0.9-0.11, +0.155, 2.14 +0.055], [-dx - 0.38 -0.11-0.9-0.11, +0.155+6.72, 2.14 +0.055], [0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.22],[0,0,-0.22]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.22],[0,0,0.22]])
	sur2 = MAP(sur2)(domain2D)
	f14 = STRUCT([sur1, sur2])

	#intermedio laterale 4
	c1 = CUBICHERMITE(S1)([[dx + 0.38 +0.11+0.9+0.22, +0.155+6.72, 2.14 +0.055], [dx + 0.38 +0.11+0.9+0.11 -0.1, +0.155+6.72 +0.22, 2.14 +0.055],
		[0,0.5,0],[-0.5,0,0]])
	c2 = CUBICHERMITE(S1)([[dx + 0.38 +0.11+0.9+0.11, +0.155+6.72, 2.14 +0.055], [dx + 0.38 +0.11+0.9+0.11 -0.1, +0.155+6.72 +0.11, 2.14 +0.055],
		[0,0.25,0],[-0.25,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.22],[0,0,-0.22]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.22],[0,0,0.22]])
	sur2 = MAP(sur2)(domain2D)
	f15 = STRUCT([sur1, sur2])

	c1 = CUBICHERMITE(S1)([[-dx - 0.38 -0.11-0.9-0.22, +0.155+6.72, 2.14 +0.055], [-dx - 0.38 -0.11-0.9-0.11 +0.1, +0.155+6.72 +0.22, 2.14 +0.055],
		[0,0.5,0],[0.5,0,0]])
	c2 = CUBICHERMITE(S1)([[-dx - 0.38 -0.11-0.9-0.11, +0.155+6.72, 2.14 +0.055], [-dx - 0.38 -0.11-0.9-0.11 +0.1, +0.155+6.72 +0.11, 2.14 +0.055],
		[0,0.25,0],[0.25,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.22],[0,0,-0.22]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.22],[0,0,0.22]])
	sur2 = MAP(sur2)(domain2D)
	f16 = STRUCT([sur1, sur2])

	#intermedio laterale 5
	c1 = CUBICHERMITE(S1)([[dx + 0.38 +0.11+0.9+0.11 -0.1, +0.155+6.72 +0.22, 2.14 +0.055],
		[dx + 0.38 +0.22+0.1 + 0.8 +0.12 -0.1 -1.47, +0.155+6.72 +0.22 +0.025, 2.14 +0.055], 
		[0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[dx + 0.38 +0.11+0.9+0.11 -0.1, +0.155+6.72 +0.11, 2.14 +0.055], 
		[dx + 0.38 +0.22+0.1 + 0.8 +0.12 -0.1 -1.47, +0.155+6.72 +0.11 +0.025, 2.14 +0.055],
		[0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.22],[0,0,-0.22]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.22],[0,0,0.22]])
	sur2 = MAP(sur2)(domain2D)
	f17 = STRUCT([sur1, sur2])

	c1 = CUBICHERMITE(S1)([[-dx - 0.38 -0.11-0.9-0.11 +0.1, +0.155+6.72 +0.22, 2.14 +0.055],
		[-dx - 0.38 -0.22-0.1 - 0.8 -0.12 +0.1 +1.47, +0.155+6.72 +0.22 +0.025, 2.14 +0.055], 
		[0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[-dx - 0.38 -0.11-0.9-0.11 +0.1, +0.155+6.72 +0.11, 2.14 +0.055], 
		[-dx - 0.38 -0.22-0.1 - 0.8 -0.12 +0.1 +1.47, +0.155+6.72 +0.11 +0.025, 2.14 +0.055],
		[0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.22],[0,0,-0.22]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.22],[0,0,0.22]])
	sur2 = MAP(sur2)(domain2D)
	f18 = STRUCT([sur1, sur2])

	
	#base metallica esterna
	c1 = BEZIER(S1)([[dx, 0.11, 0.9], [dx+0.38+0.22+0.1 + 0.8 , 0.11, 0.9]])
	c2 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 , 0.11, 0.9],[dx+0.38+0.22+0.1 + 0.8 , 0.11+6.62+0.34-0.11, 0.9]])
	c3 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 , 0.11+6.62+0.34-0.11, 0.9], [dx, 0.11+6.62+0.34-0.11, 0.9]])
	f123_1 = curves_union([ c1, c2, c3 ])([ [0, 1], [0, 1], [0, 1] ])
	c1 = BEZIER(S1)([[-dx, 0.11, 0.9], [-dx-0.38-0.22-0.1 - 0.8 , 0.11, 0.9]])
	c2 = BEZIER(S1)([[-dx-0.38-0.22-0.1 - 0.8 , 0.11, 0.9],[-dx-0.38-0.22-0.1 - 0.8 , 0.11+6.62+0.34-0.11, 0.9]])
	c3 = BEZIER(S1)([[-dx-0.38-0.22-0.1 - 0.8 , 0.11+6.62+0.34-0.11, 0.9], [-dx, 0.11+6.62+0.34-0.11, 0.9]])
	f123_2 = curves_union([ c1, c2, c3 ])([ [0, 1], [0, 1], [0, 1] ])
	#+dz=0.22
	c1 = BEZIER(S1)([[dx, 0.11, 0.9+0.22], [dx+0.38+0.22+0.1 + 0.8 , 0.11, 0.9+0.22]])
	c2 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 , 0.11, 0.9+0.22],[dx+0.38+0.22+0.1 + 0.8 , 0.11+6.62+0.34-0.11, 0.9+0.22]])
	c3 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 , 0.11+6.62+0.34-0.11, 0.9+0.22], [dx, 0.11+6.62+0.34-0.11, 0.9+0.22]])
	f123_1z = curves_union([ c1, c2, c3 ])([ [0, 1], [0, 1], [0, 1] ])
	c1 = BEZIER(S1)([[-dx, 0.11, 0.9+0.22], [-dx-0.38-0.22-0.1 - 0.8 , 0.11, 0.9+0.22]])
	c2 = BEZIER(S1)([[-dx-0.38-0.22-0.1 - 0.8 , 0.11, 0.9+0.22],[-dx-0.38-0.22-0.1 - 0.8 , 0.11+6.62+0.34-0.11, 0.9+0.22]])
	c3 = BEZIER(S1)([[-dx-0.38-0.22-0.1 - 0.8 , 0.11+6.62+0.34-0.11, 0.9+0.22], [-dx, 0.11+6.62+0.34-0.11, 0.9+0.22]])
	f123_2z = curves_union([ c1, c2, c3 ])([ [0, 1], [0, 1], [0, 1] ])
	s123_1 = BEZIER(S2)([f123_1, f123_1z])
	s123_2 = BEZIER(S2)([f123_2, f123_2z])

	#base metallica INterna
	c1 = BEZIER(S1)([[dx, 0.11+0.11, 0.9], [dx+0.38+0.22+0.1 + 0.8  -0.11, 0.11+0.11, 0.9]])
	c2 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9],[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9]])
	c3 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9], [dx, 0.11+6.62+0.34-0.11-0.11, 0.9]])
	f123_1y = curves_union([ c1, c2, c3 ])([ [0, 1], [0, 1], [0, 1] ])
	c1 = BEZIER(S1)([[-dx, 0.11+0.11, 0.9], [-dx-0.38-0.22-0.1 - 0.8  +0.11, 0.11+0.11, 0.9]])
	c2 = BEZIER(S1)([[-dx-0.38-0.22-0.1 - 0.8 +0.11, 0.11+0.11, 0.9],[-dx-0.38-0.22-0.1 - 0.8 +0.11, 0.11+6.62+0.34-0.11-0.11, 0.9]])
	c3 = BEZIER(S1)([[-dx-0.38-0.22-0.1 - 0.8 +0.11, 0.11+6.62+0.34-0.11-0.11, 0.9], [-dx, 0.11+6.62+0.34-0.11-0.11, 0.9]])
	f123_2y = curves_union([ c1, c2, c3 ])([ [0, 1], [0, 1], [0, 1] ])
	#+dz=0.22
	c1 = BEZIER(S1)([[dx, 0.11+0.11, 0.9+0.22], [dx+0.38+0.22+0.1 + 0.8  -0.11, 0.11+0.11, 0.9+0.22]])
	c2 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9+0.22],[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+0.22]])
	c3 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+0.22], [dx, 0.11+6.62+0.34-0.11-0.11, 0.9+0.22]])
	f123_1yz = curves_union([ c1, c2, c3 ])([ [0, 1], [0, 1], [0, 1] ])
	c1 = BEZIER(S1)([[-dx, 0.11+0.11, 0.9+0.22], [-dx-0.38-0.22-0.1-0.8 +0.11, 0.11+0.11, 0.9+0.22]])
	c2 = BEZIER(S1)([[-dx-0.38-0.22-0.1 - 0.8 +0.11, 0.11+0.11, 0.9+0.22],[-dx-0.38-0.22-0.1 - 0.8 +0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+0.22]])
	c3 = BEZIER(S1)([[-dx-0.38-0.22-0.1 - 0.8 +0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+0.22], [-dx, 0.11+6.62+0.34-0.11-0.11, 0.9+0.22]])
	f123_2yz = curves_union([ c1, c2, c3 ])([ [0, 1], [0, 1], [0, 1] ])
	s123_1y = BEZIER(S2)([f123_1y, f123_1yz])
	#s123_1y = MAP(s123_1y)(domain2D)
	s123_2y = BEZIER(S2)([f123_2y, f123_2yz])
	#s123_2 = MAP(s123_2)(domain2D)

	#base mettalica, volume
	v123_1 = BEZIER(S3)([s123_1, s123_1y])
	v123_1
	v123_1 = MAP(v123_1)(domain3D)
	v123_2 = BEZIER(S3)([s123_2, s123_2y])
	v123_2 = MAP(v123_2)(domain3D)


	#ripiano bottom
	s1 = MKPOL([[[dx, 0.11+0.11, 0.9 +0.22-0.001], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9+0.22-0.001], [dx, 0.11+6.62+0.34-0.11-0.11, 0.9+0.22 -0.001], 
			[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+0.22-0.001]] , [[1,2,3,4]], None])

	s2 = MKPOL([[[-dx, 0.11+0.11, 0.9 +0.22-0.001], [-dx-0.38-0.22-0.1 - 0.8 +0.11, 0.11+0.11, 0.9+0.22-0.001], [-dx, 0.11+6.62+0.34-0.11-0.11, 0.9+0.22 -0.001], 
			[-dx-0.38-0.22-0.1 - 0.8 +0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+0.22-0.001]] , [[1,2,3,4]], None])

	return COLOR(pipes_color)(STRUCT([f1, f2, f1x, f2x, fy1, fy2, f1z, f2z, f11y, f22y, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18,
		v123_1, v123_2, s1, s2]))

def getArmPillows(dx) :
	c1 = BEZIER(S1)([[dx, 0.11+0.11, 0.9], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9]])
	c2 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9],[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9]])
	c3 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9], [dx, 0.11+6.62+0.34-0.11-0.11, 0.9]])
	c4 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.22, 0.9], [dx, 0.11+0.11, 0.9]])
	f123_1 = curves_union([ c1, c2, c3, c4 ])([ [0, 1], [0, 1], [0, 1], [0,1] ])
	#base superiore 
	c1 = BEZIER(S1)([[dx, 0.11+0.11, 0.9+5.5], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9+5.5]])
	c2 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9+5.5],[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5]])
	c3 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5], [dx, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5]])
	c4 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.22, 0.9+5.5], [dx, 0.11+0.11, 0.9+5.5]])
	f123_2 = curves_union([ c1, c2, c3, c4 ])([ [0, 1], [0, 1], [0, 1], [0,1] ])
	s = BEZIER(S2)([f123_1, f123_2])
	s = MAP(s)(DOMAIN([[0,1],[0,1]])([60,10]))

	#base superiore, coprire
	c1 = BEZIER(S1)([[dx, 0.11+0.11, 0.9+5.5], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9+5.5]])
	c2 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.22, 0.9+5.5], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5]])
	c3 = BEZIER(S1)([[dx, 0.11+0.11+ 0.05, 0.9+5.5], [dx, 0.11+0.11+0.05, 0.9+6], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11 +0.05, 0.9+6], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11 +0.05, 0.9+5.5]])
	c4 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.22 -0.05, 0.9+5.5], [dx, 0.11+6.62+0.34-0.22 -0.05, 0.9+6], 
		[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.22-0.05, 0.9+6], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.22-0.05, 0.9+5.5]])
	c5 = BEZIER(S1)([[dx, 3.485, 0.9+5.5], [dx, 3.485, 0.9+5.5], 
		[dx+0.38+0.22+0.1 + 0.8 -0.11, 3.485, 0.9+5.5], [dx+0.38+0.22+0.1 + 0.8 -0.11, 3.485, 0.9+5.5]])
	ftop = BEZIER(S2)([c1, c3, c5, c4, c2])
	top = MAP(ftop)(domain2D)

	#base inferiore, coprire
	c1 = BEZIER(S1)([[dx, 0.11+0.11, 0.9], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9]])
	c2 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.22, 0.9], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9]])
	fbottom = BEZIER(S2)([c1, c2])
	bottom = MAP(fbottom)(domain2D)

	#laterale
	c1 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9],[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9]])
	c2 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9+5.5],[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5]])
	c3 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9+1], [dx+0.38+0.22+0.1 + 0.8 -0.11 +1, 0.11+0.11, 0.9+1],
		[dx+0.38+0.22+0.1 + 0.8 -0.11 +1, 0.11+6.62+0.34-0.11-0.11, 0.9+1], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+1]])
	c4 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9+5.5-2], [dx+0.38+0.22+0.1 + 0.8 -0.11 +0.5, 0.11+0.11, 0.9+5.5-2],
		[dx+0.38+0.22+0.1 + 0.8 -0.11 +0.5, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5-2], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5-2]])
	c5 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 2.14 +0.055], [dx+0.38+0.22+0.1 + 0.8 -0.11 -1, 0.11+0.11, 2.14 +0.055],
		[dx+0.38+0.22+0.1 + 0.8 -0.11 -1, 0.11+6.62+0.34-0.11-0.11, 2.14 +0.055], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 2.14 +0.055]])
	c6 = BEZIER(S1)([[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 2.7], [dx+0.38+0.22+0.1 + 0.8 -0.11 +1, 0.11+0.11, 2.7],
		[dx+0.38+0.22+0.1 + 0.8 -0.11 +1, 0.11+6.62+0.34-0.11-0.11, 2.7], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 2.7]])
	fside1 = BEZIER(S2)([c1, c3, c5, c6, c4, c2])
	side1 = MAP(fside1)(domain2D)

	#frontale 1
	c1 = BEZIER(S1)([[dx, 0.11+0.11, 0.9], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9]])
	c2 = BEZIER(S1)([[dx, 0.11+0.11, 0.9+5.5], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9+5.5]])
	c3 = BEZIER(S1)([[dx, 0.11+0.11, 0.9+0.2], [dx, 0.11+0.11 -0.25, 0.9+0.2], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11 -0.25, 0.9+0.2], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9+0.2]])
	c4 = BEZIER(S1)([[dx, 0.11+0.11, 0.9+5.5-0.2], [dx, 0.11+0.11-0.25, 0.9+5.5-0.2],
		[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11-0.25, 0.9+5.5-0.2], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 0.9+5.5-0.2]])
	c5 = BEZIER(S1)([[dx, 0.11+0.11, 2.25], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+0.11, 2.25]])
	ffrontal1 = BEZIER(S2)([c1, c3, c5, c4, c2])
	frontal1 = MAP(ffrontal1)(domain2D)

	#frontale 2
	c1 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11, 0.9], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9]])
	c2 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5]])
	c3 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11, 0.9+0.2], [dx, 0.11+6.62+0.34-0.11-0.11 +0.25, 0.9+0.2], 
		[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11 +0.25, 0.9+0.2], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+0.2]])
	c4 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5-0.2], [dx, 0.11+6.62+0.34-0.11-0.11 +0.25, 0.9+5.5-0.2],
		[dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11 +0.25, 0.9+5.5-0.2], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5-0.2]])
	c5 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11, 2.25], [dx+0.38+0.22+0.1 + 0.8 -0.11, 0.11+6.62+0.34-0.11-0.11, 2.25]])
	ffrontal2 = BEZIER(S2)([c1, c3, c5, c4, c2])
	frontal2 = MAP(ffrontal2)(domain2D)


	pillow1 = STRUCT([top, bottom, side1, frontal1, frontal2, s])
	pillow2 = R([1,2])(PI)(pillow1)
	pillow2 = T([2])([0.11+6.62+0.34])(pillow2)
	pillows = STRUCT([pillow1, pillow2])
	pillows = T([3])([0.22])(pillows)
	return (COLOR(sofa_color)(pillows))

def getSeatSkeleton(dx):
	c1 = CUBICHERMITE(S1)([[dx, 0.22+6.62+0.34, 5.33+0.23], [-dx, 0.22+6.62+0.34, 5.33+0.23], [0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[dx, 0.22+6.62+0.12, 5.33+0.23], [-dx, 0.22+6.62+0.12, 5.33+0.23], [0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.44],[0,0,-0.44]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.44],[0,0,0.44]])
	sur2 = MAP(sur2)(domain2D)
	f1 = STRUCT([sur1, sur2])

	c1 = CUBICHERMITE(S1)([[dx, +0.155+6.72 +0.22 +0.025, 2.14 +0.055], [-dx, +0.155+6.72 +0.22+0.025, 2.14 +0.055], [0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[dx, +0.155+6.72 +0.11+0.025, 2.14 +0.055], [-dx, +0.155+6.72 +0.11+0.025, 2.14 +0.055], [0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0,0.22],[0,0,-0.22]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,0,-0.22],[0,0,0.22]])
	sur2 = MAP(sur2)(domain2D)
	f2 = STRUCT([sur1, sur2])

	c1  = BEZIER(S1)([[dx, 0.11+0.11, 0.9], [-dx, 0.11+0.11, 0.9]])
	c2 = BEZIER(S1)([[dx, 0.11+0.11, 0.9+0.22], [-dx, 0.11+0.11, 0.9+0.22]])
	s1 = BEZIER(S2)([c1, c2])
	c1  = BEZIER(S1)([[dx, 0.11, 0.9], [-dx, 0.11, 0.9]])
	c2 = BEZIER(S1)([[dx, 0.11, 0.9+0.22], [-dx, 0.11, 0.9+0.22]])
	s2 = BEZIER(S2)([c1, c2])
	v1 = BEZIER(S3)([s1, s2])
	f3 = MAP(v1)(domain3D)

	c1 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11 -0.11, 0.9], [-dx, 0.11+6.62+0.34-0.11 -0.11, 0.9]])
	c2 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11, 0.9+0.22], [-dx, 0.11+6.62+0.34-0.11 -0.11, 0.9+0.22]])
	s1 = BEZIER(S2)([c1, c2])
	c1 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11, 0.9], [-dx, 0.11+6.62+0.34-0.11, 0.9]])
	c2 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11, 0.9+0.22], [-dx, 0.11+6.62+0.34-0.11, 0.9+0.22]])
	s2 = BEZIER(S2)([c1, c2])
	v1 = BEZIER(S3)([s1, s2])
	f4 = MAP(v1)(domain3D)

	#
	c1 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11, 0.9+0.22 -0.001], [-dx, 0.11+6.62+0.34-0.11-0.11, 0.9+0.22-0.001]])
	c2  = BEZIER(S1)([[dx, 0.11+0.11, 0.9+0.22-0.001], [-dx, 0.11+0.11, 0.9+0.22-0.001]])
	f5 = BEZIER(S2)([c1, c2])
	f5 = MAP(f5)(domain2D)

	return COLOR(pipes_color)(STRUCT([f1, f2, f3, f4, f5]))

def getSeats(dx, n):
	seat = STRUCT([getSeatSkeleton(dx+0.05), getSeatPillows(dx)])
	seats = []
	j = 1
	if (n % 2 == 0):
		i = 1
		while (i<=n):
			if (i==1):
				seats.append(T([1])([dx])(seat))
				seats.append(T([1])([-dx])(seat))
			else :
				seats.append(T([1])([j*2*dx + dx])(seat))
				seats.append(T([1])([(j*2*dx + dx)*-1])(seat))
				j += 1
			i = i+2
	else:
		seats.append(seat)
		i = 2
		while (i<=n):
			seats.append(T([1])([2*dx*j])(seat))
			seats.append(T([1])([-2*dx*j])(seat))
			j += 1
			i = i+2
	all_seats = STRUCT(seats)
	return (all_seats)

def getSeatPillows(dx) :
	seat_pillows = COLOR(sofa_color)(STRUCT([getSeatPill1(dx), getSeatback(dx), getSeatPill2(dx)]))
	return seat_pillows

def getSeatPill1(dx):
	#frontale 1
	c1 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22 ], [-dx, 0.22, 0.9+0.22]])
	c2 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22+2.02 ], [-dx, 0.22, 0.9+0.22+2.02]])
	c3 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22 +0.2 ], [dx, 0.22 -0.5, 0.9+0.22 +0.2 ], [-dx, 0.22 -0.5, 0.9+0.22 +0.2], [-dx, 0.22, 0.9+0.22 +0.2]])
	c4 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22 +2.02 -0.2 ], [dx, 0.22 -0.5, 0.9+0.22 +2.02 -0.2 ], [-dx, 0.22 -0.5, 0.9+0.22 +2.02 -0.2], [-dx, 0.22, 0.9+0.22 +2.02 -0.2]])
	ffrontal1 = BEZIER(S2)([c1, c3, c4, c2])
	frontal1 = MAP(ffrontal1)(domain2D)

	#top
	c1 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22+2.02 ], [-dx, 0.22, 0.9+0.22+2.02]])
	c3 = BEZIER(S1)([ [dx, 0.22 +1, 0.9+0.22+2.02], [dx, 0.22 +1, 0.9+0.22+2.02 +0.6], [-dx, 0.22+1, 0.9+0.22+2.02 +0.6], [-dx, 0.22+1, 0.9+0.22+2.02]])
	c4 = BEZIER(S1)([ [dx, 0.22 +4.6 -1, 0.9+0.22+2.02 ], [dx, 0.22 +4.6 -1, 0.9+0.22+2.02 +0.6],
		[-dx, 0.22 +4.6 -1, 0.9+0.22+2.02 +0.6], [-dx, 0.22 +4.6 -1, 0.9+0.22+2.02]])
	c2 = BEZIER(S1)([ [dx, 0.22 +4.6, 0.9+0.22+2.02 ], [-dx, 0.22 +4.6, 0.9+0.22+2.02]])
	ftop = BEZIER(S2)([c1, c3, c4, c2])
	top = MAP(ftop)(domain2D)

	#bottom
	c1 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22 ], [-dx, 0.22, 0.9+0.22]])
	c2 = BEZIER(S1)([ [dx, 0.22 +4.6, 0.9+0.22], [-dx, 0.22 +4.6, 0.9+0.22]])
	fbottom = BEZIER(S2)([c1, c2])
	bottom = MAP(fbottom)(domain2D)

	#frontale 2
	c1 = BEZIER(S1)([ [dx, 0.22 +4.6, 0.9+0.22 ], [-dx, 0.22 +4.6, 0.9+0.22]])
	c2 = BEZIER(S1)([ [dx, 0.22 +4.6, 0.9+0.22+2.02 ], [-dx, 0.22 +4.6, 0.9+0.22+2.02]])
	ffrontal2 = BEZIER(S2)([c1, c2])
	frontal2 = MAP(ffrontal2)(domain2D)

	#side 1
	c1 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22 ], [dx, 0.22 +4.6, 0.9+0.22 ]])
	c2 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22+2.02 ], [dx, 0.22 +4.6, 0.9+0.22+2.02 ]])
	fside1 = BEZIER(S2)([c1, c2])
	side1 = MAP(fside1)(domain2D)

	#side 2
	c1 = BEZIER(S1)([ [-dx, 0.22, 0.9+0.22], [-dx, 0.22 +4.6, 0.9+0.22]])
	c2 = BEZIER(S1)([ [-dx, 0.22, 0.9+0.22+2.02 ], [-dx, 0.22 +4.6, 0.9+0.22+2.02 ]])
	fside2 = BEZIER(S2)([c1, c2])
	side2 = MAP(fside2)(domain2D)

	return STRUCT([side1, side2, frontal1, frontal2, top, bottom])

def getSeatback(dx):
	#frontal 1
	c1 = BEZIER(S1)([[dx, 0.22 +4.6, 0.9 +0.22],[-dx, 0.22 +4.6, 0.9 +0.22]])
	c3 = BEZIER(S1)([[dx, 0.22 +4.6, 0.9 +0.22+1], [dx, 0.22 +4.6 -0.5, 0.9 +0.22+1], 
		[-dx, 0.22 +4.6 -0.5, 0.9 +0.22+1], [-dx, 0.22 +4.6, 0.9 +0.22+1]])
	c4 = BEZIER(S1)([[dx, 0.22 +4.6, 0.9+5.5+0.22-1], [dx, 0.22 +4.6 -0.5, 0.9+5.5+0.22-1],
		[-dx, 0.22 +4.6 -0.5, 0.9+5.5+0.22-1], [-dx, 0.22 +4.6, 0.9+5.5+0.22-1]])
	c2 = BEZIER(S1)([[dx, 0.22 +4.6, 0.9+5.5+0.22],[-dx, 0.22 +4.6, 0.9+5.5+0.22]])
	ffrontal1 = BEZIER(S2)([c1, c3, c4, c2])
	frontal1 = MAP(ffrontal1)(domain2D)
	
	#frontal 2
	c1 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11, 0.9 +0.22],[-dx, 0.11+6.62+0.34-0.11-0.11, 0.9 +0.22]])
	c3 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11, 0.9 +0.22+1], [dx, 0.11+6.62+0.34-0.11-0.11 +0.5, 0.9 +0.22+1], 
		[-dx, 0.11+6.62+0.34-0.11-0.11 +0.5, 0.9 +0.22+1], [-dx, 0.11+6.62+0.34-0.11-0.11, 0.9 +0.22+1]])
	c4 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5+0.22-1], [dx, 0.11+6.62+0.34-0.11-0.11 +0.5, 0.9+5.5+0.22-1],
		[-dx, 0.11+6.62+0.34-0.11-0.11 +0.5, 0.9+5.5+0.22-1], [-dx, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5+0.22-1]])
	c2 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5+0.22],[-dx, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5+0.22]])
	ffrontal2 = BEZIER(S2)([c1, c3, c4, c2])
	frontal2 = MAP(ffrontal2)(domain2D)

	#bottom
	c1 = BEZIER(S1)([[dx, 0.22 +4.6, 0.9 +0.22],[-dx, 0.22 +4.6, 0.9 +0.22]])
	c2 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11, 0.9 +0.22],[-dx, 0.11+6.62+0.34-0.11-0.11, 0.9 +0.22]])
	fbottom = BEZIER(S2)([c1, c2])
	bottom = MAP(fbottom)(domain2D)

	#top
	c1 = BEZIER(S1)([[dx, 0.22 +4.6, 0.9+5.5+0.22],[-dx, 0.22 +4.6, 0.9+5.5+0.22]])
	c3 = BEZIER(S1)([[dx, 0.22 +4.6 +0.2, 0.9+5.5+0.22], [dx, 0.22 +4.6 +0.2, 0.9+5.5+0.22 +0.5], [-dx, 0.22 +4.6 +0.2, 0.9+5.5+0.22 +0.5], [-dx, 0.22 +4.6 +0.2, 0.9+5.5+0.22]])
	c4 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11 -0.2, 0.9+5.5+0.22], [dx, 0.11+6.62+0.34-0.11-0.11 -0.2, 0.9+5.5+0.22 +0.5],
		[-dx, 0.11+6.62+0.34-0.11-0.11-0.2, 0.9+5.5+0.22 +0.5], [-dx, 0.11+6.62+0.34-0.11-0.11-0.2, 0.9+5.5+0.22]])
	c2 = BEZIER(S1)([[dx, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5+0.22],[-dx, 0.11+6.62+0.34-0.11-0.11, 0.9+5.5+0.22]])
	ftop = BEZIER(S2)([c1, c3, c4, c2])
	top = MAP(ftop)(domain2D)

	return STRUCT([frontal1, frontal2, bottom, top])

def getSeatPill2(dx):
	#frontale 1
	c1 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22 +2.02 +0.05], [-dx, 0.22, 0.9+0.22+2.02 +0.05]])
	c2 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22 +2.02 +0.05 +1.11], [-dx, 0.22, 0.9+0.22 +2.02 +0.05 +1.11]])
	c3 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22 +2.02 +0.05 +0.2], [dx, 0.22 -0.5, 0.9+0.22 +2.02 +0.05 +0.2], 
		[-dx, 0.22 -0.5, 0.9+0.22 +2.02 +0.05 +0.2], [-dx, 0.22, 0.9+0.22 +2.02 +0.05 +0.2]])
	c4 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22 +2.02 +0.05 +1.11 -0.2 ], [dx, 0.22 -0.5, 0.9+0.22 +2.02 +0.05 +1.11 -0.2 ], 
		[-dx, 0.22 -0.5, 0.9+0.22 +2.02 +0.05 +1.11 -0.2], [-dx, 0.22, 0.9+0.22 +2.02 +0.05 +1.11 -0.2]])
	ffrontal1 = BEZIER(S2)([c1, c3, c4, c2])
	frontal1 = MAP(ffrontal1)(domain2D)

	#top
	c1 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22 +2.02 +0.05 +1.11 ], [-dx, 0.22, 0.9+0.22 +2.02 +0.05 +1.11]])
	c3 = BEZIER(S1)([ [dx, 0.22 +1, 0.9+0.22 +2.02 +0.05 +1.11], [dx, 0.22 +1, 0.9+0.22 +2.02 +0.05 +1.11 +0.8], 
		[-dx, 0.22+1, 0.9+0.22 +2.02 +0.05 +1.11 +0.8], [-dx, 0.22+1, 0.9+0.22 +2.02 +0.05 +1.11]])
	c4 = BEZIER(S1)([ [dx, 0.22 +4.6 -1, 0.9+0.22 +2.02 +0.05 +1.11 ], [dx, 0.22 +4.6 -1, 0.9+0.22 +2.02 +0.05 +1.11 +0.8],
		[-dx, 0.22 +4.6 -1, 0.9+0.22 +2.02 +0.05 +1.11 +0.8], [-dx, 0.22 +4.6 -1, 0.9+0.22 +2.02 +0.05 +1.11]])
	c2 = BEZIER(S1)([ [dx, 0.22 +4.6, 0.9+0.22 +2.02 +0.05 +1.11], [-dx, 0.22 +4.6, 0.9+0.22 +2.02 +0.05 +1.11]])
	ftop = BEZIER(S2)([c1, c3, c4, c2])
	top = MAP(ftop)(domain2D)

	#bottom
	c1 = BEZIER(S1)([ [dx, 0.22, 0.9+0.22 +2.02 +0.05 ], [-dx, 0.22, 0.9+0.22 +2.02 +0.05]])
	c3 = BEZIER(S1)([ [dx, 0.22 +1, 0.9+0.22 +2.02 +0.05], [dx, 0.22 +1, 0.9+0.22 +2.02 +0.05 -0.8], 
		[-dx, 0.22+1, 0.9+0.22 +2.02 +0.05 -0.8], [-dx, 0.22+1, 0.9+0.22 +2.02 +0.05]])
	c4 = BEZIER(S1)([ [dx, 0.22 +4.6 -1, 0.9+0.22 +2.02 +0.05], [dx, 0.22 +4.6 -1, 0.9+0.22 +2.02 +0.05 -0.8],
		[-dx, 0.22 +4.6 -1, 0.9+0.22 +2.02 +0.05 -0.8], [-dx, 0.22 +4.6 -1, 0.9+0.22 +2.02 +0.05]])
	c2 = BEZIER(S1)([ [dx, 0.22 +4.6, 0.9+0.22 +2.02 +0.05], [-dx, 0.22 +4.6, 0.9+0.22 +2.02 +0.05]])
	fbottom = BEZIER(S2)([c1, c3, c4, c2])
	bottom = MAP(fbottom)(domain2D)

	return STRUCT([frontal1, top, bottom]);

def getAdditionalPipes (dx, n) :
	pipes = []
	if (n>2):
		num = n-1
		if (n%2 == 0):
			i = 0
			while (i<num-1):
				pipes.append(getPipe(i*dx*2))
				pipes.append(getPipe(-i*dx*2))
				i += 1
		else:
			i = 0
			while (i<num-1):
				pipes.append(getPipe(i*dx*2 -dx))
				pipes.append(getPipe(-(i*dx*2 -dx)))
				i += 1
	return COLOR(pipes_color)(STRUCT(pipes))

def getPipe(dx):
	domain = DOMAIN([[0,2*PI],[0,2*PI]])([45,45])
	c1 = CUBICHERMITE(S1)([[dx + 0.11, 0.22+6.62+0.23, 5.33+0.23],
		[dx + 0.11, 0.22+6.62+0.23, 0], 
		[0,0,0],[0,0,0]])
	c2 = CUBICHERMITE(S1)([[dx -0.11, 0.22+6.62+0.23, 5.33+0.23], 
		[dx -0.11, 0.22+6.62+0.23, 0],
		[0,0,0],[0,0,0]])
	sur1 = CUBICHERMITE(S2)([c1,c2,[0,0.44,0],[0,-0.44,0]])
	sur1 = MAP(sur1)(domain2D)
	sur2 = CUBICHERMITE(S2)([c1,c2,[0,-0.44,0],[0,0.44,0]])
	sur2 = MAP(sur2)(domain2D)
	mapping = torus(0.22/4,0.22/8)
	base = T([1,2])([dx, 0.22+6.62+0.23])(MAP(mapping)(DOMAIN2D([ INTERVALS(2 * PI)(32), INTERVALS(2 * PI)(32) ])))
	pipe = STRUCT([sur1, sur2, base])
	return pipe

seats = getSeats(seat_dx/2, numberOfSeats)
arms = getArms(seat_dx/2, numberOfSeats)
if (numberOfSeats>2):
	modelLC2 = STRUCT([seats, arms, getAdditionalPipes(seat_dx/2, numberOfSeats)])
else:
	modelLC2 = STRUCT([seats, arms])
VIEW(seats)
VIEW(arms)
VIEW(modelLC2)